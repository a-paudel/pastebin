define namespace `paudel.me`;
use namespace `paudel.me`;
define database pastebin;
use database pastebin;

/*
    ==========
    = LOGINS =
    ==========
*/
define table user schemafull permissions none;
define field user on user type string;
define field pass on user type string;
define index idx_user on user columns user unique;

define scope public
    session 1h
    signup (select * from 1 )
    -- signup (create user set user=$user, pass=crypto::argon2::generate($pass) )
    signin (select * from user where user = $user and crypto::argon2::compare(pass, $pass) )
;
create user set user='public', pass=crypto::argon2::generate('public');

/*
    ===============
    = PASTE TABLE =
    ===============
*/
define table paste schemafull
    permissions
        for select where ($scope == 'public' and created_at > time::now() - 1h)
        for create where ($scope == 'public')
;
define field created_at on paste type datetime
    value time::now()
;
define field code on paste type string
    value rand::string(3)
;
define index idx_code on paste columns code unique;

define field content on paste type string
    assert $value is not null and string::trim($value) != ''
;

-- delete old pastes
define event paste on table paste when ($event != 'delete') then {
    delete paste where created_at < time::now() - 1h;
}
;